AWSTemplateFormatVersion: "2010-09-09"
# A template for a stack that contains an ElastiCache Redis Cluster.
Description: Environment Manager Resources
Parameters:
  pExecutionRole:
    Description: role to execute the Lambda function
    Type: String
  pCrossAccountRole:
    Description: role to assume for cross-account writes
    Type: String
  pDestinationTable:
    Description: destination table for cross-account writes
    Type: String
  pAlertSNSTopic:
    Description: SNS Topic ARN for lambda alerts.
    Type: String
  pAuditLambdaFunction:
    Description: the lambda function that audits upstream changes
    Type: String
  pResourcePrefix:
    Description: optional resource name prefix
    Type: String
    Default: ""
Resources:
  tableInfraConfigLbSettings:
    Type: "AWS::DynamoDB::Table"
    Properties:
      AttributeDefinitions:
        - AttributeName: EnvironmentName
          AttributeType: S
        - AttributeName: LoadBalancerGroup
          AttributeType: S
        - AttributeName: VHostName
          AttributeType: S
      GlobalSecondaryIndexes:
        - IndexName: LoadBalancerGroup-index
          KeySchema:
            - AttributeName: LoadBalancerGroup
              KeyType: HASH
          Projection:
            ProjectionType: ALL
          ProvisionedThroughput:
            ReadCapacityUnits: 10
            WriteCapacityUnits: 2
      KeySchema:
        - AttributeName: EnvironmentName
          KeyType: HASH
        - AttributeName: VHostName
          KeyType: RANGE
      ProvisionedThroughput:
        ReadCapacityUnits: 10
        WriteCapacityUnits: 2
      StreamSpecification:
        StreamViewType: NEW_AND_OLD_IMAGES
      TableName: !Sub ${pResourcePrefix}InfraConfigLBSettings
  lambdaInfraEnvironmentManagerLbSettingsRouter:
    Type: "AWS::Lambda::Function"
    Properties:
      Code: ./lambda/InfraEnvironmentManagerLbSettingsRouter/infra-environment-manager-lb-settings-router.zip
      Description: This function routes load balancer settings records to the correct DynamoDB table in each child account.
      Environment:
        Variables:
          DESTINATION_TABLE: !Ref pDestinationTable
          ROLE_NAME: !Ref pCrossAccountRole
      FunctionName: !Sub ${pResourcePrefix}InfraEnvironmentManagerLbSettingsRouter
      Handler: index.handler
      MemorySize: 128
      Role: !Ref pExecutionRole
      Runtime: nodejs6.10
      Timeout: 10
  alertInfraEnvironmentManagerLbSettingsRouter:
    Type: "AWS::CloudWatch::Alarm"
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !Ref pAlertSNSTopic
      AlarmDescription: Error propagating load balancer settings change to the destination account
      AlarmName: !Sub ${pResourcePrefix}alertInfraEnvironmentManagerLbSettingsRouter
      ComparisonOperator: GreaterThanThreshold
      EvaluationPeriods: 1
      MetricName: Errors
      Namespace: AWS/Lambda
      Dimensions:
        - Name: FunctionName
          Value: !Ref lambdaInfraEnvironmentManagerLbSettingsRouter
      Period: 60
      Statistic: Sum
      Threshold: 0
  triggerInfraEnvironmentManagerLbSettingsRouter:
    Type: "AWS::Lambda::EventSourceMapping"
    Properties:
      BatchSize: 5
      Enabled: true
      EventSourceArn: !GetAtt tableInfraConfigLbSettings.StreamArn
      FunctionName: !Ref lambdaInfraEnvironmentManagerLbSettingsRouter
      StartingPosition: LATEST
  triggerAuditInfraConfigLbSettings:
    Type: "AWS::Lambda::EventSourceMapping"
    Properties:
      BatchSize: 5
      Enabled: true
      EventSourceArn: !GetAtt tableInfraConfigLbSettings.StreamArn
      FunctionName: !Ref pAuditLambdaFunction
      StartingPosition: LATEST
Outputs:
  lambdaInfraEnvironmentManagerLbSettingsRouter:
    Description: The load balancer settings router Lambda function
    Value:
      !GetAtt lambdaInfraEnvironmentManagerLbSettingsRouter.Arn
  tableInfraConfigLbSettings:
    Description: The load balancer settings table
    Value:
      !Ref tableInfraConfigLbSettings